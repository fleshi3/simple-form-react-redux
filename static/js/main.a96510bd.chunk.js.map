{"version":3,"sources":["components/validate.js","components/renderField.js","components/formFirstPage.js","components/formSecondPage.js","components/formThirdPage.js","App.js","actions/index.js","reducers/forms.js","store.js","index.js"],"names":["validate","values","errors","fname","length","lname","email","test","uname","country","sex","pets","renderField","_ref","input","label","type","_ref$meta","meta","touched","error","warning","react_default","a","createElement","className","Object","assign","placeholder","style","border","color","reduxForm","form","destroyOnUnmount","forceUnregisterOnUnmount","props","handleSubmit","onSubmit","display","flexFlow","htmlFor","Field","name","component","id","renderError","previousPage","value","tyoe","onClick","renderPetSelector","map","val","key","pristine","submitting","disabled","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showForm","simpleForm","single","notes","nextPage","bind","assertThisInitialized","state","page","submitted","setState","_this$props","submitForm","submittedForms","padding","formFirstPage","formSecondPage","formThirdPage","Component","connect","wizard","dispatch","initialState","arguments","undefined","action","concat","toConsumableArray","rootReducer","combineReducers","formReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a96510bd.chunk.js","sourcesContent":["// validate.js\nconst validate = values => {\n  const errors = {};\n  if (!values.fname) {\n    errors.fname = '*Required';\n  } else if (values.fname.length > 15) {\n    errors.fname = '*Must be 15 characters or less';\n  }\n  if (!values.lname) {\n    errors.lname = '*Required';\n  } else if (values.lname.length > 15) {\n    errors.lname = '*Must be 15 characters or less';\n  }\n  if (!values.email) {\n    errors.email = '*Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = '*Invalid email address';\n  }\n  if (!values.uname) {\n    errors.uname = '*Required';\n  } else if (values.uname.length > 15) {\n    errors.uname = '*Username exceeds character limit';\n  }\n  if (!values.country) {\n    errors.country = '*Required';\n  } else if (values.country.length > 20) {\n    errors.country = '*Must be 20 characters or less';\n  }\n  if (!values.sex) {\n    errors.sex = '*Please select your gender';\n  }\n  if (!values.pets) {\n    errors.pets = '*Please select from the available options';\n  }\n  return errors;\n};\nexport default validate;\n","// formatting for Field elements\nimport React from \"react\";\nconst renderField = ({input, label, type, meta: {touched, error, warning}}) => (\n  <div className=\"inputContainer\">\n      <input\n        {...input}\n        placeholder={label}\n        type={type}\n        style={{border: touched && error ? 'red 2px solid' : ''}}\n      />\n      <div style={{color: 'red'}}>\n        {touched &&\n          ((error && <span>{error}</span>) ||\n            (warning && <span>{warning}</span>))}\n      </div>\n  </div>\n);\nexport default renderField;\n","// First Page\nimport React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport validate from './validate';\nimport renderField from './renderField';\n\nlet FormFirstPage = props => {\n  const {handleSubmit} = props;\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className=\"formContainer\"\n      style={{display: 'flex', flexFlow: 'column nowrap'}}>\n      <label htmlFor=\"lfname\">First Name:</label>\n      <Field type=\"text\" name=\"fname\" component={renderField} id=\"lfname\" />\n      <label htmlFor=\"lsname\">Last Name:</label>\n      <Field type=\"text\" name=\"lname\" component={renderField} id=\"lsname\" />\n      <label htmlFor=\"lemail\">Email:</label>\n      <Field type=\"text\" name=\"email\" component={renderField} id=\"lemail\" />\n      <div className=\"formButtons\">\n        <button type=\"submit\" className=\"next\">\n          Next\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: 'wizard',\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true,\n  validate,\n})(FormFirstPage);\n","// Second Page\nimport React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport validate from './validate';\nimport renderField from './renderField';\n\nconst renderError = ({meta: {touched, error}}) =>\n  touched && error ? <div style={{color: \"red\"}}>{error}</div> : false;\n\nlet FormSecondPage = props => {\n  const {handleSubmit, previousPage} = props;\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className=\"formContainer\"\n      style={{display: 'flex', flexFlow: 'column nowrap'}}>\n      <label htmlFor=\"luname\">Username:</label>\n      <Field type=\"text\" name=\"uname\" component={renderField} id=\"luname\" />\n      <label htmlFor=\"lcountry\">Country:</label>\n      <Field type=\"text\" name=\"country\" component={renderField} id=\"lcountry\" />\n      <label>Sex:</label>\n      <div className=\"formRadio\">\n        <label>\n          <Field name=\"sex\" component=\"input\" type=\"radio\" value=\"male\" />\n          Male\n        </label>\n        <label>\n          <Field name=\"sex\" component=\"input\" type=\"radio\" value=\"female\" />\n          Female\n        </label>\n        <Field name=\"sex\" component={renderError} className=\"formRadio2\" />\n      </div>\n      <div className=\"formButtons\">\n        <button tyoe=\"button\" className=\"previous\" onClick={previousPage}>\n          Previous\n        </button>\n        <button type=\"submit\" className=\"next\">\n          Next\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: 'wizard',\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true,\n  validate,\n})(FormSecondPage);\n","// Third Page\nimport React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport validate from './validate';\n\nconst pets = ['None', 'Dog', 'Cat', 'Fish', 'Rabbit', 'Bird', 'Snake'];\n\nconst renderPetSelector = ({input, meta: {touched, error}}) => (\n  <div className=\"selectContainer\">\n    <select {...input}>\n      <option value=\"\">Select your pet</option>\n      {pets.map(val => (\n        <option value={val} key={val}>\n          {val}\n        </option>\n      ))}\n    </select>\n    {touched && error && <div style={{color: \"red\"}}>{error}</div>}\n  </div>\n);\n\nlet FormThirdPage = props => {\n  const {handleSubmit, previousPage, pristine, submitting} = props;\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className=\"formContainer\"\n      style={{display: 'flex', flexFlow: 'column nowrap'}}>\n      <div>\n        <label htmlFor=\"lpets\">Pets:</label>\n        <Field\n          type=\"text\"\n          name=\"pets\"\n          component={renderPetSelector}\n          id=\"lpets\"\n        />\n      </div>\n      <div className=\"formCheckbox\">\n        <div>\n          <label htmlFor=\"lsingle\">Single:</label>\n        </div>\n        <Field type=\"checkbox\" name=\"single\" component=\"input\" id=\"pets\" />\n      </div>\n      <div className=\"formTextContainer\">\n        <label htmlFor=\"lnotes\">Notes:</label>\n        <div className=\"formTextArea\">\n          <Field\n            type=\"textarea\"\n            name=\"notes\"\n            component=\"textarea\"\n            id=\"lnotes\"\n            placeholder=\"tell us about yourself...\"\n          />\n        </div>\n      </div>\n      <div className=\"formButtons\">\n        <button tyoe=\"button\" className=\"previous\" onClick={previousPage}>\n          Previous\n        </button>\n        <button type=\"submit\" disabled={pristine || submitting}>\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: 'wizard',\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true,\n  validate,\n})(FormThirdPage);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {submitForm} from './actions/index';\nimport FormFirstPage from './components/formFirstPage';\nimport FormSecondPage from './components/formSecondPage';\nimport FormThirdPage from './components/formThirdPage';\nimport './App.scss';\n\n// present submitted forms\nconst mapStateToProps = state => {\n  return {\n    simpleForm: state.simpleForm,\n    wizard: state.form.wizard,\n  };\n};\n\n// submit values to state array\nconst mapDispatchToProps = (dispatch, values) => {\n  return {\n    submitForm: values => dispatch(submitForm(values)),\n  };\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.nextPage = this.nextPage.bind(this);\n    this.previousPage = this.previousPage.bind(this);\n    this.state = {\n      page: 1,\n      submitted: false,\n    };\n  }\n  nextPage() {\n    this.setState({page: this.state.page + 1});\n  }\n\n  previousPage() {\n    this.setState({page: this.state.page - 1});\n  }\n\n  showForm = simpleForm => {\n    const {\n      fname,\n      lname,\n      email,\n      uname,\n      country,\n      sex,\n      pets,\n      single,\n      notes,\n    } = simpleForm;\n    return (\n      <div className=\"dataContainer\">\n        <div>\n          <span>name:</span> {fname} &emsp; <span>surname:</span> {lname}\n        </div>\n        <div>\n          <span>email:</span> {email}\n        </div>\n        <div>\n          <span>username:</span> {uname}{' '}\n        </div>\n        <div>\n          <span>country:</span>\n          {country}\n        </div>\n        <div>\n          <span>sex:</span>\n          {sex}\n        </div>\n        <div>\n          <span>pets:</span>\n          {pets}\n        </div>\n        <div>\n          <span>single:</span>\n          {single ? 'TRUE' : 'FALSE'}\n        </div>\n        <div>\n          <span>notes:</span>\n          {notes}\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    const {submitForm, simpleForm} = this.props;\n    const submittedForms = simpleForm.map(this.showForm);\n    const {page} = this.state;\n    return (\n      <div className=\"App\" style={{padding: '2rem'}}>\n        <div className=\"formTitle\">Simple React/Redux Form</div>\n        {page === 1 && <FormFirstPage onSubmit={this.nextPage} />}\n        {page === 2 && (\n          <FormSecondPage\n            previousPage={this.previousPage}\n            onSubmit={this.nextPage}\n          />\n        )}\n        {page === 3 && (\n          <FormThirdPage\n            previousPage={this.previousPage}\n            onSubmit={submitForm}\n          />\n        )}\n        <div className=\"dataTitle\">\n          awaiting form data\n          <span>.</span>\n          <span>.</span>\n          <span>.</span>\n        </div>\n        <div>{submittedForms}</div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n","export function submitForm(values) {\n  return {\n    type: 'SUBMIT_FORM',\n    values,\n  };\n}\n","const initialState = {\n  submittedForms: [],\n};\n\nconst simpleForm = (state = initialState.submittedForms, action) => {\n  switch (action.type) {\n    case 'SUBMIT_FORM':\n      return [...state, action.values];\n    default:\n      return state;\n  }\n};\n\nexport default simpleForm;\n","import {createStore, combineReducers} from 'redux';\nimport {reducer as formReducer} from 'redux-form';\nimport simpleForm from './reducers/forms';\n\nconst rootReducer = combineReducers({\n  form: formReducer,\n  simpleForm,\n});\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}